{"version":3,"sources":["Grocery/Cards.js","Grocery/List.js","Grocery/Index.js","ActionCreators/shopActions.js","App.js","reportWebVitals.js","Reducer/shopReducer.js","index.js"],"names":["Card","props","className","title","src","url","price","onClick","onAdd","quantity","List","type","onSub","Grocery","onAddProduct","item","addToList","increaseQuant","name","incQ","decreaseQuant","decQ","this","products","map","selectedProducts","totalAmount","React","Component","connect","store","dispatch","payload","addProduct","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","shopReducer","state","action","newSelectedProducts1","added","length","forEach","i","push","newSelectedProducts","newAmount","newSelectedProducts2","newAmount2","splice","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2159942.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n\nconst Card = props => {\n    return (\n        <div className=\"card-container\">\n            <p>{props.title}</p>\n            <img className=\"image-style\" src={props.url}/>\n            <p>{props.price}</p>\n            <button className=\"button-style\" onClick={()=>props.onAdd({title:props.title, price:props.price, quantity:props.quantity})}>Add to Cart</button>\n            </div>\n    )\n}\nexport default Card","import React from 'react'\n\nconst List = (props) =>{\n    return(\n        <div className=\"list-container\">\n            <p>{props.title}</p>\n            <div className=\"add-container\">\n                <button type=\"button\" onClick={()=>{props.onSub(props.title)}}>-</button>    \n                <p className=\"quan-style\">{props.quantity}</p>\n                <button type=\"button\" onClick={()=>{props.onAdd(props.title)}}>+</button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default List","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport './style.css';\nimport {addProduct,increaseQuantity, decreaseQuantity} from '../ActionCreators/shopActions';\nimport Card from './Cards';\nimport List from './List';\n\nclass Grocery extends React.Component\n{\n    onAddProduct=(item)=>{\n        this.props.addToList(item);\n    };\n    increaseQuant=(name)=>{\n        this.props.incQ(name);\n    }\n    decreaseQuant=(name)=>{\n        this.props.decQ(name);\n    }\n    // componentDidMount()\n    // {\n    //     window.alert(\"Alert!!!!\")\n    // }\n        render()\n        {\n            return (\n                <div>\n                <h2>Grocery App</h2>\n                <div className=\"root-container\">\n                    \n                    \n                    <div className=\"left-container\">\n                        {\n                            this.props.products.map((item)=>{\n                           return <Card title={item.title} url={item.url} price={item.price} quantity={item.quantity}\n                           onAdd={this.onAddProduct}/>\n                        })\n                        \n                        }\n                    </div>\n\n                    <div className=\"right-container\">\n                        {this.props.selectedProducts.map(item=>{\n                        return <List onAdd={this.increaseQuant} onSub={this.decreaseQuant} title={item.title} quantity={item.quantity}/>\n                        })}\n                        <h2>Total Amount:{this.props.totalAmount}</h2>\n                        \n                    \n                    </div>\n                    </div>\n                    </div>\n            );\n        }\n\n}\n\nconst mapStateToProps =(store) =>{\n    return{\n        products: store.products,\n        selectedProducts: store.selectedProducts,\n        totalAmount:store.totalAmount,\n        quantity:store.quantity,\n    }\n\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        addToList:(item)=>dispatch(addProduct(item)),\n        incQ:(name)=>dispatch(increaseQuantity(name)),\n        decQ:(name)=>dispatch(decreaseQuantity(name)),\n    };\n\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Grocery);","const ADD_SELECTED_PRODUCT =\"ADD_SELECTED_PRODUCT\";\n\nexport const addProduct = (item) =>{\n\n    return {\n        type:ADD_SELECTED_PRODUCT,\n        payload: item\n    }\n}\n\nexport const increaseQuantity=(id)=>{\n    return {\n        type:\"INCREASE_QUAN\",\n        id:id,\n    }\n}\n\nexport const decreaseQuantity=(id)=>{\n    return {\n        type:\"DECREASE_QUAN\",\n        id:id,\n    }\n}","import React from 'react';\nimport './App.css';\nimport Grocery from './Grocery/Index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grocery/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    products: [\n        { title: 'Maggi', url: \"https://images-na.ssl-images-amazon.com/images/I/812o4EQXPKL._SL1500_.jpg\", price: 20, quantity: 1 },\n        { title: 'Roti', url: \"https://werecipes.com/app/uploads/2015/04/phulka-roti-chappati-recipe.jpg\", price: 10, quantity: 1 },\n        { title: 'Pizza', url: \"https://img.grouponcdn.com/deal/872bd115e31d4093bd6729b2be0872a5/a5/v1/c700x420.jpg\", price: 200, quantity: 1 },\n        { title: 'Pasta', url: \"https://www.dinneratthezoo.com/wp-content/uploads/2018/07/penne-alla-vodka-5.jpg\", price: 100, quantity: 1 },\n        { title: 'Meat', url: \"https://media.wired.com/photos/5b493b6b0ea5ef37fa24f6f6/master/pass/meat-80049790.jpg\", price: 150, quantity: 1 },\n    ],\n    selectedProducts: [],\n    totalAmount:0,\n}\n\n\nconst shopReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n\n        case \"ADD_SELECTED_PRODUCT\":\n            const newSelectedProducts1 = [...state.selectedProducts];\n            let added = false;\n            if (newSelectedProducts1.length > 0) {\n                newSelectedProducts1.forEach((item, i) => {\n                    if (action.payload.title === item.title) {\n                        newSelectedProducts1[i].quantity += 1;\n                        added = true;\n                    }\n\n\n                })\n\n                if (!added)\n\n                    newSelectedProducts1.push(action.payload);\n            }\n\n            else\n\n                newSelectedProducts1.push(action.payload);\n\n\n            return {\n                ...state,\n                selectedProducts: [...newSelectedProducts1],\n                totalAmount: state.totalAmount + action.payload.price,\n            };\n        case \"INCREASE_QUAN\":\n            const newSelectedProducts = [...state.selectedProducts];\n            let newAmount = state.totalAmount;\n            newSelectedProducts.forEach((item, i) => {\n                if (action.id === item.title) {\n                    newSelectedProducts[i].quantity += 1;\n                    newAmount += newSelectedProducts[i].price;\n                }\n            });\n\n            return {\n                ...state,\n                selectedProducts: newSelectedProducts,\n                totalAmount: newAmount,\n            }\n\n        case \"DECREASE_QUAN\":\n            const newSelectedProducts2 = [...state.selectedProducts];\n            let newAmount2 = state.totalAmount;\n            newSelectedProducts2.forEach((item, i) => {\n                if (action.id === item.title) {\n                    if (newSelectedProducts2[i].quantity > 0) {\n                        newSelectedProducts2[i].quantity -= 1;\n                        newAmount2 -= newSelectedProducts2[i].price;\n                    }\n                    if(newSelectedProducts2[i].quantity === 0){\n                        const deleteProducts=newSelectedProducts2.splice(i,1); \n                    }\n                }\n            });\n\n            return {\n                ...state,\n                selectedProducts: newSelectedProducts2,\n                totalAmount: newAmount2,\n            }\n        default:\n            return state;\n\n\n\n    }\n\n};\nexport default shopReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport shopReducer from './Reducer/shopReducer'\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst store= createStore(shopReducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n            <App />\n            </Provider>,\n             document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}